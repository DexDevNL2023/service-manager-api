# Global configuration
spring.application.name=gateway-service
server.address=localhost
server.port=9999
# Indiquer aux microservices de recuperer leur config en utilisant spring cloud et vault
spring.config.import=optional:configserver:http://localhost:8888, vault://
spring.cloud.vault.authentication=TOKEN
#spring.cloud.vault.token=hvs.JlliRG1MqI86QdEFOYafFGmP
spring.cloud.vault.token=d+QjDvYB9ys7+/BfOV1RdTHqg0LeSvurmpu6n4ZyWlw=

# Defined the router location
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth
spring.cloud.gateway.routes[0].filters=AuthenticationFilter

spring.cloud.gateway.routes[1].id=about-service
spring.cloud.gateway.routes[1].uri=lb://about-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/about
spring.cloud.gateway.routes[1].filters=AuthenticationFilter

spring.cloud.gateway.routes[2].id=career-service
spring.cloud.gateway.routes[2].uri=lb://career-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/career
spring.cloud.gateway.routes[2].filters=AuthenticationFilter

spring.cloud.gateway.routes[3].id=contact-service
spring.cloud.gateway.routes[3].uri=lb://contact-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/contact
spring.cloud.gateway.routes[3].filters=AuthenticationFilter

spring.cloud.gateway.routes[4].id=home-service
spring.cloud.gateway.routes[4].uri=lb://home-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/home
spring.cloud.gateway.routes[4].filters=AuthenticationFilter

spring.cloud.gateway.routes[5].id=offers-service
spring.cloud.gateway.routes[5].uri=lb://offers-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/offers
spring.cloud.gateway.routes[5].filters=AuthenticationFilter
